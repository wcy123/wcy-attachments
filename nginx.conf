
#user  nobody;
# user root staff;
worker_processes  auto;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    


    upstream kf {
        server localhost:8585;
    }
    
    upstream quality {
        server localhost:8484;
    }

    upstream history {
        server localhost:8589;
    }

    upstream pusher {
        server 127.0.0.1:8488;
    }

    upstream webpushingmessage {
        server 127.0.0.1:8487;
    }

    upstream restchannel {
        server localhost:8591;
    }

    server {
        listen       0.0.0.0:9090;
        server_name  localhost;
        #set $source_path /Users/zhaoqiang/Desktop/Codes/kefu-frontend ;   #TODO 设置kefu-frontend项目的路径
        set $source_path /Users/wangchunye/GitHub/kefu-frontend ;

        location = / {
            rewrite / /resources/html/dev/entry.html;
        }

        location /webim {
            root /Users/zhaoqiang/Desktop/Codes/;
        }

        location ^~  /mo {
            rewrite ^/ /resources/html/dev/entry.html;
        }

        location ^~ /js {
            rewrite ^/js/(.*)$ /grunt/js/src/$1 last;
        }
        location ^~  /css {
            rewrite ^/css/(.*)$ /grunt/build/css/$1 last;
        }
        location /images {
            rewrite ^/images/(.*)$ /resources/images/$1 last;
        }
        location /fonts {
            rewrite ^/fonts/(.*)$ /resources/fonts/$1 last;
        }
        location /locales {
            rewrite ^/locales/(.*)$ /resources/locales/$1 last;
        }
        location /media {
            rewrite ^/media/(.*)$ /resources/media/$1 last;
        }

        location = /agentMain {
            rewrite / /resources/html/dev/agent.html;
        }

        location = /mo/agent {
            rewrite / /resources/html/dev/agent.html;
        }

        location = /adminMain {
            rewrite / /resources/html/dev/admin.html;
        }

        location = /mo/admin {
            rewrite / /resources/html/dev/admin.html;
        }
        location  /resources {
            root $source_path;
        }
        location /grunt {
            root $source_path;
        }


        location / {
            proxy_pass http://kf;
        }


        location ~  /v1/tenants/(\S+)/servicesessions/qualityreview/file {
               
                proxy_pass http://kf;
            }

        location ~  /v1/tenants/(\S+)/servicesessions/qualityreview {
                proxy_pass http://quality;
            }
        
        location ~  /v1/tenants/(\S+)/servicesessions/(\S+)/qualityreview {
               
                proxy_pass http://quality;
            }

        location ~ /v1/tenants/(\S+)/servicesessions/(\S+)/history {
                proxy_pass http://history;
        }

        location ~ /v1/Tenant/me/ServiceSessionHistorys {
                proxy_pass http://history;
        }

        location ~ /v1/Tenant/me/ServiceSessions {
                proxy_pass http://history;
        }

        location ~ /v1/tenants/(\S+)/servicesessioncurrents {
                proxy_pass http://history;
        }

        location ^~ /push {
            proxy_pass http://pusher;
        }

        location ~ /v1/tenants/(\S+)/channels {
                proxy_pass http://restchannel;
        }

        location ~ /users/(\S+)/activities {
            proxy_pass http://webpushingmessage;
        }

        location = /management/timestamp {
            default_type application/json;
            return 200 '{"timestamp":"$date_local"}';
            }

        location = /management/graylist {
              default_type application/json;
              return 200 '{}';
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
